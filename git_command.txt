#git command list

git init : 저장소 지정

.git : 저장소폴더

got status : working tree의 상태확인

git add (대상) : 작업내용을 Staging area에 추가

git add . : 현재 디렉토리의 모든파일을 add

git commit : 버전 생성 후 에디터를 사용하여 메세지 작성

git commit -m "메세지" : 에디터를 사용하지 않고 간략한 메세지 작성하여 버전생성

git commit -am ": 이전 버전이 존재하는 조건하에 add와 버전생성을 동시처리

git log : 생성된 버전의 기록확인

git log --stat : 버전들의 기록 자세히보기

git log -p : 버전간의 변경 내용 확인하기

git diff : 작업 중 변경된 내용 확인하기

git checkout (대상) : 작업하고자하는 버전 및 브랜츠로 이동 

git reset (대상), git reset --mixed (대상) : 대상으로 시점 변경 및 작업한내용은 보존 ( index 취소, add하기전 unstaged 상태 )

git reset --hard (대상) : 대상으로 시점 변경 및 이후 모든정보 상제 ( index취소 , add하기전 unstaged 상태)

git reset --soft (대상) : 대상으로 시점 변경 및 모든정보 보존 ( index 보존, add된 상태 stage 상태 )

git revert (대상) : 직전버전에 대한 변경내용 및 커밋 취소
※역순으로 한단계씩 진행되어야함 ( 건너뛰기하면 충돌발생 )

git branch : 현재 저장소에 생성된 브랜치 목록을 보여줌

git branch (대상) : 새로운 브랜치를 생성

git push : 현재 지역저장소의 내용을 원격저장소로 전송

git tag : 생성된 태그 전체 조회

git tag (태그이름) : 대상 커밋만을 가르키는 태그생성

git tag -a (태그이름) : 대상 커밋과 유저, 메일, 날짜, 메세지 등을 저장

git show (태그이름) : -a 옵션으로 저장한 정보 확인

git tag -s (태그이름) : GPG서명이 있다면 서명가능

git push origin (태그이름) : 태그정보를 원격저장소에 전송

git push origin --tags : 모든 태그정보 원격저장소에 전송

git tag -d (태그이름) : 해당 태그 삭제

git push origin :(태그이름) : 원격저장소에 저장된 태그삭제

git config --global core.editor "편집기이름" : git의 기본에디터 변경
※ --global 옵션은 현재 컴퓨터 전역의 설정을 일괄 변경 

git remote : 현재 원격저장소의 목록

git remote add (원격저장소 주소) : 원격저장소 와 지역저장소를 연결

git remote -v : 원격저장소의 주소까지 출력

git clone (원격저장소 주소) (디렉토리명) : 원격저장소의 버전들을 지역저장소로 전송하며 디렉토리의 이름을 지정할 수 있음
